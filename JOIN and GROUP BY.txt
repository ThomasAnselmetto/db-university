1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT `students`.`name`AS "nome_studente",
	  `students`.`surname`AS "cognome_studente"

FROM `students`

INNER JOIN degrees

ON degrees.id = students.degree_id
WHERE `degrees`.`name` = "Corso di Laurea in Economia";

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze

SELECT `degrees`.`name` AS `nome_di_laurea` 
FROM `degrees` 
INNER JOIN `departments` 
ON `departments`.`id` = `degrees`.`department_id` 
WHERE `departments`.`name` = "Dipartimento di Neuroscienze" AND `degrees`.`level` = "magistrale";

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT `courses`.* 
FROM `course_teacher` 
JOIN `courses`ON `courses`.`id` = `course_teacher`.`course_id` 
WHERE `course_teacher`.`teacher_id`= 44;



4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il
relativo dipartimento, in ordine alfabetico per cognome e nome

SELECT 
`students`.`id` AS "id_student",
`students`.`name`AS "name_student" , 
`students`.`surname`AS "surname_student" ,

`degrees`.`id` AS "degree_id",
`degrees`.`name` AS "degree_name",

`departments`.`id` AS "department_id",
`departments`.`name` AS "department_name"

FROM `students`
--anche se inverto l'ordine il risultato si avra' comunque corretto
JOIN `degrees` ON `degrees`.`id` = `students`.`degree_id`
JOIN `departments` ON `degrees`.departments_id` = `departments`.`id`


ORDER BY `students`.`surname`, `students`.`name`,`students`.`id`




5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
SELECT
`degrees`.`id` AS "id_degree",    `degrees`.`name` AS "name_degree",
`courses`.`id`AS "id_course",    `courses`.`name` AS "name_course",
`teachers`.`id` AS "id_teacher",   `teachers`.`name` AS "name_teacher", `teachers`.`surname` AS "surname_teacher"

FROM `degrees`
JOIN `courses` ON `degrees`.`id` = `courses`.`degree_id`
JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id`
JOIN `teachers` ON `teachers`.`id` = `course_teacher`.`teacher_id`;



6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)

SELECT DISTINCT `degrees`.`id` AS "id_degree", `degrees`.`name` AS "name_degree", `courses`.`id`AS "id_course", `courses`.`name` AS "name_course", `teachers`.`id` AS "id_teacher", `teachers`.`name` AS "name_teacher", `teachers`.`surname` AS "surname_teacher" 

FROM `degrees` 
JOIN `courses` ON `degrees`.`id` = `courses`.`degree_id` 
JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id` 
JOIN `teachers` ON `teachers`.`id` = `course_teacher`.`teacher_id` 
JOIN `departments` ON `departments`.id = `degrees`.`department_id` 
WHERE `departments`.`name` = "Dipartimento di Matematica";


7. BONUS: Selezionare per ogni studente quanti tentativi dâ€™esame ha sostenuto per
superare ciascuno dei suoi esami

SELECT
 COUNT(*) AS "tentativi",
 `exam_student`.`student_id`,
 `students`.`name`,
 `students`.`surname`,
 `courses`.`name` AS "nome_corso",
 MAX(`exam_student`.`vote`) AS "max_vote"
 FROM `exam_student` 
JOIN `exams` ON `exam_student`.`exam_id` = `exams`.`id` 
JOIN `courses` ON `exams`.`course_id` = `courses`.`id` 
JOIN `students` ON `exam_student`.`student_id` = `students`.`id` 

GROUP BY `exam_student`.`student_id`, `courses`.`id` 
HAVING MAX(`exam_student`.`vote`) >= 18 ORDER BY `max_vote` DESC;











1. Contare quanti iscritti ci sono stati ogni anno

SELECT COUNT(*) 
AS `numero_iscritti`, year(`enrolment_date`) 
FROM `students` 
GROUP BY year(`enrolment_date`);

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio

SELECT COUNT(*) as n_insegnanti, `office_address`AS indirizzo FROM `teachers` GROUP BY `office_address`;

3. Calcolare la media dei voti di ogni appello d'esame
SELECT `exam_id`,round(AVG(`vote`)) as media_voto 
FROM `exam_student` 
GROUP BY `exam_id`;

4. Contare quanti corsi di laurea ci sono per ogni dipartimento
SELECT COUNT(*) as corsi_per_dipartimento ,`department_id` 
FROM `degrees` 
GROUP BY `department_id`;


